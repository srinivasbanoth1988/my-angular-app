{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/interceptors/HttpRequestInterceptorMock.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,aAAa;IAExB,YAAoB,KAAqB,EACrB,MAAc;QADd,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IAElC,CAAC;IAED,QAAQ;QACN,IAAI,YAAY,GAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;QACvD,IAAG,YAAY,IAAI,IAAI,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;SACjC;IACH,CAAC;IAGD,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;;0EApBU,aAAa;6FAAb,aAAa;QCR1B,yEACE;QAAA,qEAAI;QAAA,uDAA2C;QAAA,4DAAK;QAEpD,gEACA;QAAA,4EAAkE;QAA5C,qIAAS,YAAQ,IAAE;QAAyB,iEAAM;QAAA,4DAAS;QACnF,4DAAM;;QAJA,0DAA2C;QAA3C,qHAA2C;;6FDOpC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACQ;AACW;AACQ;AACpB;AAC+B;;AAiB9E,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,mGAA0B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,YANrF;YACP,uEAAa;YACb,qEAAgB;YAChB,oEAAgB;YAChB,kEAAmB;SACpB;mIAIU,SAAS,mBAblB,2DAAY;QACZ,qEAAc;QACd,kEAAa,aAGb,uEAAa;QACb,qEAAgB;QAChB,oEAAgB;QAChB,kEAAmB;6FAKV,SAAS;cAfrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,kEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,oEAAgB;oBAChB,kEAAmB;iBACpB;gBACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,mGAA0B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;gBAC9F,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACN;;;AAM9B,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAE,CAAC;IAEvC,KAAK,CAAC,KAAc,EAAE,QAAgB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;YACnF,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YAGhB,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YAC3C,OAAQ,IAAI,CAAC;QACf,CAAC,CAAC,CAAC;IAML,CAAC;;sEAjBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACA;AACH;;;AAEpD,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM;KAAE;IAClD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE,CAAC,CAAC;AAMzC,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,EAC9C,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBACxD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACqC;;;;;;;ICoB3E,sEAAuD;IAAA,6EAAkB;IAAA,4DAAM;;;IAC/E,sEAAoD;IAAA,6FAAkC;IAAA,4DAAM;;;IAH9F,0EAEE;IAAA,kHAA+E;IAC/E,kHAA4F;IAC9F,4DAAM;;;IAFE,0DAA+C;IAA/C,yKAA+C;IAC/C,0DAA4C;IAA5C,sKAA4C;;;IAUlD,sEAA0D;IAAA,gFAAqB;IAAA,4DAAM;;;IACrF,sEAA2D;IAAA,iGAAsC;IAAA,4DAAM;;;IAFzG,0EACE;IAAA,kHAAqF;IACrF,kHAAuG;IACzG,4DAAM;;;IAFE,0DAAkD;IAAlD,+KAAkD;IAClD,0DAAmD;IAAnD,gLAAmD;;ADvB9D,MAAM,cAAc;IAOzB,YAAoB,WAAwB,EAAU,WAAyB,EACvE,KAAqB,EACrB,MAAc;QAFF,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAc;QACvE,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QARtB,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;SACpE,CAAC,CAAC;QAEH,cAAS,GAAI,KAAK,CAAC;IAIf,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;IACL,CAAC;IAED,KAAK;;QACH,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC1B,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,OAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,0CAAE,KAAK,QAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,KAAK,CAAC;aAE7F,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACjC,CAAC,EACD,KAAK,CAAC,EAAE;QAGR,CAAC,CAAC,CAAC;IAET,CAAC;;4EApCU,cAAc;8FAAd,cAAc;QCV3B,yEAGE;QAAA,yEAGE;QAAA,yEAGE;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,gEACA;QAAA,0EACE;QAD4B,0IAAY,WAAO,IAAE;QACjD,yEACE;QAAA,2EAAgC;QAAA,wEAAa;QAAA,4DAAQ;QACrD,uEAKA;QAAA,4GAIM;QACR,4DAAM;QACN,0EACE;QAAA,4EAAmC;QAAA,oEAAQ;QAAA,4DAAQ;QACnD,uEAIA;QAAA,4GAGM;QACR,4DAAM;QACN,8EAA8C;QAAA,iEAAK;QAAA,4DAAS;QAC9D,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7BM,0DAAuB;QAAvB,oFAAuB;QAQnB,0DAA6H;QAA7H,uMAA6H;QAY7H,0DAAsI;QAAtI,gNAAsI;;6FDrBzI,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACXpC;AAAA;AAAA;AAAA;AAAA;AAAqD;AACqD;AAEpE;;AAI/B,MAAM,0BAA0B;IACrC,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAEpD,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG;aAC3B,OAAO,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;YACtC,OAAO,+CAAE,CAAC,IAAI,iEAAY,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SACxD;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;oGAXU,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B;6FAA1B,0BAA0B;cADtC,wDAAU;;;;;;;;;;;;;ACNX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  currentUser : any;\n  constructor(private route: ActivatedRoute,\n              private router: Router) {\n\n  }\n\n  ngOnInit(){\n    let loggedInUser =  localStorage.getItem('currentUser')\n    if(loggedInUser == null) {\n      this.router.navigate(['login']);\n    } else {\n      this.currentUser = loggedInUser;\n    }\n  }\n\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['login']);\n  }\n}\n","<div class=\"jumbotron text-center\" style=\"margin-bottom:0\">\n  <h1>Hi {{currentUser}}, Welcome to Angular App!</h1>\n\n  <br>\n  <button type=\"submit\" (click)=\"logout();\" class=\"btn btn-primary\">Logout</button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-ui';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {LoginComponent} from \"./login/login.component\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from  '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport {HttpRequestInterceptorMock} from \"./interceptors/HttpRequestInterceptorMock\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptorMock, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport {Observable, pipe} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient){}\n\n  login(email : string, password :string) {\n    return this.http.post(\"/users/authenticate\", { username: email, password: password }).\n      pipe(map(user => {\n\n\n      localStorage.setItem('currentUser', email);\n      return  user;\n    }))\n\n\n\n\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {HomeComponent} from \"./home/home.component\";\n\nconst routes: Routes = [{\n  path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, NgForm, Validators} from \"@angular/forms\";\nimport {UserService} from \"../services/user.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { first } from 'rxjs/operators';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginFrom = new FormGroup({\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    email: new FormControl('', [Validators.required, Validators.email])\n  });\n\n  submitted =  false;\n  constructor(private formBuilder: FormBuilder, private userService : UserService,\n  private route: ActivatedRoute,\n  private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.loginFrom = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  login() {\n    this.submitted=true;\n    if (this.loginFrom.invalid) {\n      return;\n    }\n\n    this.userService.login(this.loginFrom.get('email')?.value,this.loginFrom.get('password')?.value)\n\n      .subscribe(\n        data => {\n          this.router.navigate(['home']);\n        },\n        error => {\n\n\n        });\n\n  }\n}\n","<div class=\"back\">\n\n\n  <div class=\"div-center\">\n\n\n    <div class=\"content\">\n\n\n      <h3>Login</h3>\n      <hr />\n      <form [formGroup]=\"loginFrom\" (ngSubmit)=\"login();\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Email address</label>\n          <input\n            formControlName=\"email\"\n            id=\"exampleInputEmail1\"\n            type=\"text\"\n            class=\"form-control\">\n          <div *ngIf=\"(loginFrom.controls.email.touched && loginFrom.controls.email.invalid) || submitted && loginFrom.controls.email.invalid\"\n               class=\"alert alert-danger\">\n            <div *ngIf=\"loginFrom.controls.email.errors?.required\">Email is required.</div>\n            <div *ngIf=\"loginFrom.controls.email.errors?.email\">Please, enter valid email address.</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\"\n                 formControlName=\"password\"\n\n                 class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" >\n          <div *ngIf=\"(loginFrom.controls.password.touched && loginFrom.controls.password.invalid) || submitted && loginFrom.controls.password.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"loginFrom.controls.password.errors?.required\">Password is required.</div>\n            <div *ngIf=\"loginFrom.controls.password.errors?.minlength\">Password must be at least 6 characters</div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\n\n\n@Injectable()\nexport class HttpRequestInterceptorMock implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler):\n    Observable<HttpEvent<any>> {\n    if (request.url && request.url\n      .indexOf(`/users/authenticate`) > -1) {\n      return of(new HttpResponse({ status: 200, body: {} }));\n    }\n\n    return next.handle(request);\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}